From: Tobias Quathamer <toddy@debian.org>
Date: Fri, 16 Aug 2013 23:10:33 +0200
Subject: Fix uninitialized variables

During the compilation, these warnings are treated as errors.
---
 src/import/musicxmlimport.cpp       | 2 +-
 src/layout/drawablefunctionmark.cpp | 4 ++--
 src/score/interval.cpp              | 2 +-
 src/score/playablelength.cpp        | 2 +-
 src/ui/mainwin.cpp                  | 6 +++---
 src/widgets/actionseditor.cpp       | 2 +-
 src/widgets/sourceview.cpp          | 4 ++--
 7 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/import/musicxmlimport.cpp b/src/import/musicxmlimport.cpp
index ae2f801..bbf8908 100644
--- a/src/import/musicxmlimport.cpp
+++ b/src/import/musicxmlimport.cpp
@@ -384,7 +384,7 @@ void CAMusicXmlImport::readAttributes( QString partId ) {
 					}
 				}
 
-				CAClef::CAPredefinedClefType t;
+				CAClef::CAPredefinedClefType t = CAClef::Undefined;
 				if (sign=="G") t=CAClef::Treble; // only treble and bass clefs are supported for now
 				else if (sign=="F") t=CAClef::Bass;
 
diff --git a/src/layout/drawablefunctionmark.cpp b/src/layout/drawablefunctionmark.cpp
index d57ab50..4895e44 100644
--- a/src/layout/drawablefunctionmark.cpp
+++ b/src/layout/drawablefunctionmark.cpp
@@ -260,8 +260,8 @@ CADrawableFunctionMarkSupport::~CADrawableFunctionMarkSupport() {
 void CADrawableFunctionMarkSupport::draw(QPainter *p, const CADrawSettings s) {
 	QFont font("FreeSans");
 	QString text;
-	CAFunctionMark::CAFunctionType type;
-	bool minor;
+	CAFunctionMark::CAFunctionType type = _function1->functionMark()->chordArea();;
+	bool minor = false;
 
 	//prepare drawing stuff
 	switch (_drawableFunctionMarkSupportType) {
diff --git a/src/score/interval.cpp b/src/score/interval.cpp
index 948bb10..9d9acbc 100644
--- a/src/score/interval.cpp
+++ b/src/score/interval.cpp
@@ -65,7 +65,7 @@ CAInterval::CAInterval( CADiatonicPitch pitch1, CADiatonicPitch pitch2, bool abs
 	int relQnt = ((quantity()-1)%7)+1;
 	int relPLow = pLow.noteName()%7/*, relPHigh = pHigh.noteName()%7*/;
 
-	int deltaQlt;
+	int deltaQlt = 0;
 	switch (relQnt) {
 	case 1: // prime
 		deltaQlt = 0;
diff --git a/src/score/playablelength.cpp b/src/score/playablelength.cpp
index fc7ba15..26e2a0a 100644
--- a/src/score/playablelength.cpp
+++ b/src/score/playablelength.cpp
@@ -184,7 +184,7 @@ QList<CAPlayableLength> CAPlayableLength::timeLengthToPlayableLengthList( int t,
 
 	int currentTime = breveTime;
 	int logCurrentMusLenPlusOne = 0;
-	int dots;
+	int dots = 0;
 	bool findNote = true;
 	while (workTime && (currentTime >= musicLengthToTimeLength( HundredTwentyEighth ))) {
 
diff --git a/src/ui/mainwin.cpp b/src/ui/mainwin.cpp
index d4f1077..36cdcd0 100644
--- a/src/ui/mainwin.cpp
+++ b/src/ui/mainwin.cpp
@@ -1742,7 +1742,7 @@ void CAMainWin::scoreViewMousePress(QMouseEvent *e, const QPoint coords) {
 			// Insert context
 			if (uiContextType->isChecked()) {
 				// Add new Context
-				CAContext *newContext;
+				CAContext *newContext = NULL;
 				CADrawableContext *dupContext = v->nearestUpContext(coords.x(), coords.y());
 				switch(uiContextType->currentId()) {
 					case CAContext::Staff: {
@@ -2497,7 +2497,7 @@ void CAMainWin::insertMusElementAt(const QPoint coords, CAScoreView *v) {
 				// same code for the Rest insertion
 
 				CATuplet *tuplet = static_cast<CAPlayable*>(left->musElement())->tuplet();
-				QList<CAPlayable*> noteList; int number; int actualNumber;
+				QList<CAPlayable*> noteList; int number = 0; int actualNumber = 0;
 				if ( tuplet  ) {
 					noteList = tuplet->noteList();
 					number = tuplet->number();
@@ -2595,7 +2595,7 @@ void CAMainWin::insertMusElementAt(const QPoint coords, CAScoreView *v) {
 				// same code for the Note insertion
 
 				CATuplet *tuplet = static_cast<CAPlayable*>(left->musElement())->tuplet();
-				QList<CAPlayable*> noteList; int number; int actualNumber;
+				QList<CAPlayable*> noteList; int number = 0; int actualNumber = 0;
 				if ( tuplet  ) {
 					noteList = tuplet->noteList();
 					number = tuplet->number();
diff --git a/src/widgets/actionseditor.cpp b/src/widgets/actionseditor.cpp
index d6e4150..bd4af05 100644
--- a/src/widgets/actionseditor.cpp
+++ b/src/widgets/actionseditor.cpp
@@ -520,7 +520,7 @@ bool CAActionsEditor::loadActionsTable(const QString & filename, bool bSCuts/* =
 
 	// Lines with '#' (comments) will be ignored
 	QRegExp rx("^(.*)\\t|\\s*(.*)\\t|\\s*(.*)\\t|\\s*(.*)\\t|\\s*(.*)\\t|\\s*(.*)");
-	int row;
+	int row = -1;
 
     QFile f( filename );
     if ( f.open( QIODevice::ReadOnly ) ) {
diff --git a/src/widgets/sourceview.cpp b/src/widgets/sourceview.cpp
index 33829ea..6ee4d71 100644
--- a/src/widgets/sourceview.cpp
+++ b/src/widgets/sourceview.cpp
@@ -119,7 +119,7 @@ void CASourceView::on_commit_clicked() {
 }
 
 CASourceView *CASourceView::clone() {
-	CASourceView *v;
+	CASourceView *v = NULL;
 	if ( document() )
 		v = new CASourceView( document(), static_cast<QWidget*>(parent()) );
 	else if ( voice() )
@@ -131,7 +131,7 @@ CASourceView *CASourceView::clone() {
 }
 
 CASourceView *CASourceView::clone(QWidget *parent) {
-	CASourceView *v;
+	CASourceView *v = NULL;
 	if ( document() )
 		v = new CASourceView( document(), parent );
 	else if ( voice() )
